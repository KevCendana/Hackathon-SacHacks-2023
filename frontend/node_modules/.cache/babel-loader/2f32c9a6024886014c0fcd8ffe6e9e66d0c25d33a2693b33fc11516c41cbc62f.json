{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/Workspace/HTML-CSS-JS-Projects/lyric_link/frontend/src/SlideOutMenu.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport './SlideOutMenu.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SlideOutMenu = ({\n  isMenuOpen,\n  toggleMenu\n}) => {\n  _s();\n  const menuRef = useRef(null);\n\n  // Click outside handler\n  useEffect(() => {\n    function handleClickOutside(event) {\n      if (menuRef.current && !menuRef.current.contains(event.target)) {\n        if (isMenuOpen) {\n          toggleMenu();\n        }\n      }\n    }\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isMenuOpen, toggleMenu]); // Add toggleMenu to the dependency array\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: menuRef,\n    className: `slide-out-menu ${isMenuOpen ? 'open' : ''}`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(SlideOutMenu, \"lbfKxozlpk19p2tUpYavRIkbEU0=\");\n_c = SlideOutMenu;\nexport default SlideOutMenu;\nvar _c;\n$RefreshReg$(_c, \"SlideOutMenu\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","SlideOutMenu","isMenuOpen","toggleMenu","_s","menuRef","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/home/Desktop/Workspace/HTML-CSS-JS-Projects/lyric_link/frontend/src/SlideOutMenu.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport './SlideOutMenu.css';\n\nconst SlideOutMenu = ({ isMenuOpen, toggleMenu }) => {\n  const menuRef = useRef(null);\n\n  // Click outside handler\n  useEffect(() => {\n    function handleClickOutside(event) {\n      if (menuRef.current && !menuRef.current.contains(event.target)) {\n        if (isMenuOpen) {\n          toggleMenu();\n        }\n      }\n    }\n    document.addEventListener('mousedown', handleClickOutside);\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isMenuOpen, toggleMenu]); // Add toggleMenu to the dependency array\n\n  return (\n    <div ref={menuRef} className={`slide-out-menu ${isMenuOpen ? 'open' : ''}`}>\n      {/* */}\n      {/* No need for the Toggle Menu button if the Header component controls the menu */}\n    </div>\n  );\n};\n\nexport default SlideOutMenu;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,YAAY,GAAGA,CAAC;EAAEC,UAAU;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EACnD,MAAMC,OAAO,GAAGP,MAAM,CAAC,IAAI,CAAC;;EAE5B;EACAD,SAAS,CAAC,MAAM;IACd,SAASS,kBAAkBA,CAACC,KAAK,EAAE;MACjC,IAAIF,OAAO,CAACG,OAAO,IAAI,CAACH,OAAO,CAACG,OAAO,CAACC,QAAQ,CAACF,KAAK,CAACG,MAAM,CAAC,EAAE;QAC9D,IAAIR,UAAU,EAAE;UACdC,UAAU,CAAC,CAAC;QACd;MACF;IACF;IACAQ,QAAQ,CAACC,gBAAgB,CAAC,WAAW,EAAEN,kBAAkB,CAAC;IAE1D,OAAO,MAAM;MACXK,QAAQ,CAACE,mBAAmB,CAAC,WAAW,EAAEP,kBAAkB,CAAC;IAC/D,CAAC;EACH,CAAC,EAAE,CAACJ,UAAU,EAAEC,UAAU,CAAC,CAAC,CAAC,CAAC;;EAE9B,oBACEH,OAAA;IAAKc,GAAG,EAAET,OAAQ;IAACU,SAAS,EAAG,kBAAiBb,UAAU,GAAG,MAAM,GAAG,EAAG;EAAE;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGtE,CAAC;AAEV,CAAC;AAACf,EAAA,CAzBIH,YAAY;AAAAmB,EAAA,GAAZnB,YAAY;AA2BlB,eAAeA,YAAY;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}