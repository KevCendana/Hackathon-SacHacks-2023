{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/Workspace/HTML-CSS-JS-Projects/Hackathon-SacHacks-2023/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Header, HeroSection, CardContainer } from './Components';\nimport SlideOutMenu from './SlideOutMenu';\nimport CommentFormPage from './CommentFormPage';\nimport './App.css';\nimport './animations.css';\n\n// This is the main app structure component that holds all the other components in Components.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State hooks to keep track of whether content and menu should be displayed\n  const [showContent, setShowContent] = useState(true); // Controls the visibility of the main content (ex. \"All the best music\"\")\n  const [isMenuOpen, setMenuOpen] = useState(false); // Controls the visibility of the menu\n\n  // Function called when 'Explore' link is clicked in the middle of the page, to start comments\n  const handleCommentClick = () => {\n    setShowContent(false);\n  };\n\n  // Function called when the user opens and closes menus such as the user profile menu\n  const toggleMenu = () => {\n    setMenuOpen(!isMenuOpen);\n  };\n\n  // This useEffect hook will run once when the component is mounted\n  useEffect(() => {\n    document.title = \"Lyric Link\"; // Sets the title of the document\n  }, []); // The empty dependency array means it will only run once on mount  \n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        toggleMenu: toggleMenu\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), showContent ? /*#__PURE__*/_jsxDEV(HeroSection, {\n        showContent: showContent,\n        onCommentClick: handleCommentClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(CommentFormPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CardContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SlideOutMenu, {\n        isMenuOpen: isMenuOpen,\n        toggleMenu: toggleMenu\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5699iLZAHs7im+fbXLOhlWPEuJc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Header","HeroSection","CardContainer","SlideOutMenu","CommentFormPage","jsxDEV","_jsxDEV","App","_s","showContent","setShowContent","isMenuOpen","setMenuOpen","handleCommentClick","toggleMenu","document","title","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onCommentClick","_c","$RefreshReg$"],"sources":["/Users/home/Desktop/Workspace/HTML-CSS-JS-Projects/Hackathon-SacHacks-2023/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Header, HeroSection, CardContainer } from './Components';\nimport SlideOutMenu from './SlideOutMenu';\nimport CommentFormPage from './CommentFormPage';\n\nimport './App.css';\nimport './animations.css';\n\n\n// This is the main app structure component that holds all the other components in Components.js\nfunction App() {\n  // State hooks to keep track of whether content and menu should be displayed\n  const [showContent, setShowContent] = useState(true); // Controls the visibility of the main content (ex. \"All the best music\"\")\n  const [isMenuOpen, setMenuOpen] = useState(false);    // Controls the visibility of the menu\n\n  // Function called when 'Explore' link is clicked in the middle of the page, to start comments\n  const handleCommentClick = () => {\n    setShowContent(false);\n  };\n\n  // Function called when the user opens and closes menus such as the user profile menu\n  const toggleMenu = () => {\n    setMenuOpen(!isMenuOpen);\n  };\n\n  // This useEffect hook will run once when the component is mounted\n  useEffect(() => {\n    document.title = \"Lyric Link\"; // Sets the title of the document\n  }, []); // The empty dependency array means it will only run once on mount  \n\n  return (\n    <Router> {/*Wrapping the application in router to enable URL routing*/}\n      <div className=\"app\">\n\n        {/* Header component with the top toolbar and menu toggle functionality */}\n        <Header toggleMenu={toggleMenu} />\n\n        {/* The hero (main) section adapts based on state (ex. may change to comment page*/}\n        {showContent ? (\n          <HeroSection showContent={showContent} onCommentClick={handleCommentClick} />\n        ) : (\n          <CommentFormPage/>\n        )}\n          \n        {/* The card container holds the top artists, songs, albums */}\n        <CardContainer />\n          \n        {/* SlideOutMenu component that holds the user profile menu */}\n        <SlideOutMenu isMenuOpen={isMenuOpen} toggleMenu={toggleMenu} />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,aAAa,IAAIC,MAAM,QAAQ,kBAAkB;AAC1D,SAASC,MAAM,EAAEC,WAAW,EAAEC,aAAa,QAAQ,cAAc;AACjE,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,eAAe,MAAM,mBAAmB;AAE/C,OAAO,WAAW;AAClB,OAAO,kBAAkB;;AAGzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EACtD,MAAM,CAACe,UAAU,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAI;;EAEtD;EACA,MAAMiB,kBAAkB,GAAGA,CAAA,KAAM;IAC/BH,cAAc,CAAC,KAAK,CAAC;EACvB,CAAC;;EAED;EACA,MAAMI,UAAU,GAAGA,CAAA,KAAM;IACvBF,WAAW,CAAC,CAACD,UAAU,CAAC;EAC1B,CAAC;;EAED;EACAd,SAAS,CAAC,MAAM;IACdkB,QAAQ,CAACC,KAAK,GAAG,YAAY,CAAC,CAAC;EACjC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEV,OAAA,CAACP,MAAM;IAAAkB,QAAA,GAAC,GAAC,eACPX,OAAA;MAAKY,SAAS,EAAC,KAAK;MAAAD,QAAA,gBAGlBX,OAAA,CAACN,MAAM;QAACc,UAAU,EAAEA;MAAW;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAGjCb,WAAW,gBACVH,OAAA,CAACL,WAAW;QAACQ,WAAW,EAAEA,WAAY;QAACc,cAAc,EAAEV;MAAmB;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAE7EhB,OAAA,CAACF,eAAe;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAClB,eAGDhB,OAAA,CAACJ,aAAa;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAGjBhB,OAAA,CAACH,YAAY;QAACQ,UAAU,EAAEA,UAAW;QAACG,UAAU,EAAEA;MAAW;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb;AAACd,EAAA,CA1CQD,GAAG;AAAAiB,EAAA,GAAHjB,GAAG;AA4CZ,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}